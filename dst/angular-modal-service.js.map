{"version":3,"sources":["webpack:///webpack/bootstrap 3125dd89625daaeca99e","webpack:///./src/angular-modal-service.js"],"names":["module","angular","factory","$animate","$document","$compile","$controller","$http","$rootScope","$q","$templateRequest","$timeout","ModalService","self","getTemplate","template","templateUrl","deferred","defer","resolve","then","error","reject","promise","appendChild","parent","child","children","length","enter","showModal","options","body","element","controllerName","controller","modalScope","scope","$new","rootScopeOnClose","$on","event","cleanUpClose","closeDeferred","closedDeferred","inputs","$scope","close","result","delay","undefined","extend","linkFn","modalElement","$element","controllerObjBefore","controllerAs","modalController","appendElement","modal","closed","leave","$destroy"],"mappings":"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","file":"angular-modal-service.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3125dd89625daaeca99e","//  angularModalService.js\n//\n//  Service for showing modal dialogs.\n\n/***** JSLint Config *****/\n/*global angular  */\n(function() {\n\n  'use strict';\n\n  var module = angular.module('angularModalService', []);\n\n  module.factory('ModalService', ['$animate', '$document', '$compile', '$controller', '$http', '$rootScope', '$q', '$templateRequest', '$timeout',\n    function($animate, $document, $compile, $controller, $http, $rootScope, $q, $templateRequest, $timeout) {\n\n    function ModalService() {\n\n      var self = this;\n\n      //  Returns a promise which gets the template, either\n      //  from the template parameter or via a request to the\n      //  template url parameter.\n      var getTemplate = function(template, templateUrl) {\n        var deferred = $q.defer();\n        if (template) {\n          deferred.resolve(template);\n        } else if (templateUrl) {\n          $templateRequest(templateUrl, true)\n            .then(function(template) {\n              deferred.resolve(template);\n            }, function(error) {\n              deferred.reject(error);\n            });\n        } else {\n          deferred.reject(\"No template or templateUrl has been specified.\");\n        }\n        return deferred.promise;\n      };\n\n      //  Adds an element to the DOM as the last child of its container\n      //  like append, but uses $animate to handle animations. Returns a\n      //  promise that is resolved once all animation is complete.\n      var appendChild = function(parent, child) {\n        var children = parent.children();\n        if (children.length > 0) {\n          return $animate.enter(child, parent, children[children.length - 1]);\n        }\n        return $animate.enter(child, parent);\n      };\n\n      self.showModal = function(options) {\n\n        //  Get the body of the document, we'll add the modal to this.\n        var body = angular.element($document[0].body);\n\n        //  Create a deferred we'll resolve when the modal is ready.\n        var deferred = $q.defer();\n\n        //  Validate the input parameters.\n        var controllerName = options.controller;\n        if (!controllerName) {\n          deferred.reject(\"No controller has been specified.\");\n          return deferred.promise;\n        }\n\n        //  Get the actual html of the template.\n        getTemplate(options.template, options.templateUrl)\n          .then(function(template) {\n\n            //  Create a new scope for the modal.\n            var modalScope = (options.scope || $rootScope).$new();\n            var rootScopeOnClose = $rootScope.$on('$locationChangeSuccess', function(event){\n              cleanUpClose(false);\n            });\n\n            //  Create the inputs object to the controller - this will include\n            //  the scope, as well as all inputs provided.\n            //  We will also create a deferred that is resolved with a provided\n            //  close function. The controller can then call 'close(result)'.\n            //  The controller can also provide a delay for closing - this is\n            //  helpful if there are closing animations which must finish first.\n            var closeDeferred = $q.defer();\n            var closedDeferred = $q.defer();\n            var inputs = {\n              $scope: modalScope,\n              close: function(result, delay) {\n                if (delay === undefined || delay === null) delay = 0;\n                $timeout(function() {\n\n                  cleanUpClose(result);\n\n                }, delay);\n              }\n            };\n\n            //  If we have provided any inputs, pass them to the controller.\n            if (options.inputs) angular.extend(inputs, options.inputs);\n\n            //  Compile then link the template element, building the actual element.\n            //  Set the $element on the inputs so that it can be injected if required.\n            var linkFn = $compile(template);\n            var modalElement = linkFn(modalScope);\n            inputs.$element = modalElement;\n\n            //  Create the controller, explicitly specifying the scope to use.\n            var controllerObjBefore = modalScope[options.controllerAs];\n            var modalController = $controller(options.controller, inputs, false, options.controllerAs);\n\n            if (options.controllerAs && controllerObjBefore) {\n              angular.extend(modalController, controllerObjBefore);\n            }\n\n            //  Finally, append the modal to the dom.\n            if (options.appendElement) {\n              // append to custom append element\n              appendChild(options.appendElement, modalElement);\n            } else {\n              // append to body when no custom append element is specified\n              appendChild(body, modalElement);\n            }\n\n            //  We now have a modal object...\n            var modal = {\n              controller: modalController,\n              scope: modalScope,\n              element: modalElement,\n              close: closeDeferred.promise,\n              closed: closedDeferred.promise\n            };\n\n            //  ...which is passed to the caller via the promise.\n            deferred.resolve(modal);\n\n            function cleanUpClose(result) {\n\n              //  Resolve the 'close' promise.\n              closeDeferred.resolve(result);\n\n              //  Let angular remove the element and wait for animations to finish.\n              $animate.leave(modalElement)\n                      .then(function () {\n                        //  Resolve the 'closed' promise.\n                        closedDeferred.resolve(result);\n\n                        //  We can now clean up the scope\n                        modalScope.$destroy();\n\n                        //  Unless we null out all of these objects we seem to suffer\n                        //  from memory leaks, if anyone can explain why then I'd\n                        //  be very interested to know.\n                        inputs.close = null;\n                        deferred = null;\n                        closeDeferred = null;\n                        modal = null;\n                        inputs = null;\n                        modalElement = null;\n                        modalScope = null;\n                      });\n\n              // remove event watcher\n              rootScopeOnClose && rootScopeOnClose();\n            }\n\n          })\n          .then(null, function(error) { // 'catch' doesn't work in IE8.\n            deferred.reject(error);\n          });\n\n        return deferred.promise;\n      };\n\n    }\n\n    return new ModalService();\n  }]);\n\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-modal-service.js"],"sourceRoot":""}